linters-settings:
  goconst:
    min-len: 2
    min-occurrences: 3
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
      - sloppyReassign
      - captLocal
      - hugeParam
  gocyclo:
    min-complexity: 15
  revive:
    ignore-generated-header: true
  lll:
    line-length: 160
  nolintlint:
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: true # require nolint directives to be specific about which linter is being skipped
linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - bodyclose
    - dogsled
    - errcheck
    - exhaustive
    - goconst
    - gocritic
    - gofmt
    - revive
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - lll
    - nakedret
    - noctx
    - nolintlint
    - rowserrcheck
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - whitespace
  # don't enable:
  # - depguard
  # - deadcode
  # - structcheck
  # - varcheck
  # - dupl
  # - funlen
  # - goimports
  # - gomnd
  # - misspell
  # - asciicheck
  # - gochecknoglobals
  # - gocognit
  # - godot
  # - godox
  # - goerr113
  # - interfacer
  # - maligned
  # - nestif
  # - prealloc
  # - testpackage
  # - wsl
issues:
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - linters:
        - gocritic
      text: "unnecessaryDefer:"
    - linters:
        - gosec
      text: '(G501|G505|G401)'
  exclude-dirs:
    - "./.go"